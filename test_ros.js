const ROSLIB = require('roslib'); // Importa a biblioteca ROSLIB

// Conectar ao rosbridge WebSocket
let ros = new ROSLIB.Ros({
  url: "ws://localhost:9090" // Alterar para o IP correto se necess√°rio
});

// Mensagens de status da conex√£o
ros.on('connection', function() {
  console.log("‚úÖ Conectado ao rosbridge!");
});

ros.on('error', function(error) {
  console.error("‚ùå Erro na conex√£o:", error);
});

ros.on('close', function() {
  console.log("‚ö†Ô∏è Conex√£o com rosbridge fechada.");
});

// Fun√ß√£o para listar t√≥picos dispon√≠veis
function listarTopicos() {
  ros.getTopics(function(result) {
    console.log("üì° T√≥picos dispon√≠veis:", result.topics);
  });
}

// Criando um listener para verificar o t√≥pico espec√≠fico
let webPathListener = new ROSLIB.Topic({
  ros: ros,
  name: "/mirwebapp/web_path",
  messageType: "mirMsgs/WebPath"
});

// Inscrever-se no t√≥pico para receber mensagens
webPathListener.subscribe(function(message) {
  console.log("üìå Mensagem recebida em /mirwebapp/web_path:", message);
});

// Executar ap√≥s 3 segundos para garantir conex√£o
setTimeout(listarTopicos, 3000);
