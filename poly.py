
import cv2
import numpy as np

# path
path = "baixados.png"

# Reading an image in default
# mode
image = cv2.imread(path)

# Window name in which image is
# displayed
window_name = 'Image'

# Polygon corner points coordinates
pts =  np.array([ [264.50000762939, 152.5] , 
                 [ 269.90600585938 ,152.27199554443] ,
                 [275.25400161743 ,150.18798828125],
                 [280.6840133667 ,148.53000640869],
                 [286.21000289917, 148.5000038147],
                 [291.4999961853 ,149.49998855591],
                 [296.87400817871, 151.37800216675],
                 [342.5 ,151.4999961853],
                 [347.90599822998, 151.27199172974],
                 [364.50000762939 ,143.5000038147],
                 [369.87400054932 ,141.62199020386],
                 [399.50000762939, 141.4999961853],
                 [404.90600585938, 141.72800064087],
                 [469.50000762939 ,143.5000038147],
                 [474.90600585938, 143.27199935913],
                 [477.00000762939, 142.99999237061] ],
               np.int32)

pts1 =  np.array([ [4.203895392974451e-45, 0.05868666246533394],
    [9.140619654709739e+23, -5.436029296390963e+16],
    [193.56015014648438, -6.700325486126279e-16],
    [4.098795611239039e-20, 3.825153723361911e+30],
    [5.712887284193587e+22, 0.1885918825864792],
    [12.09750747680664, 9.298161784372233e-33],
    [-5.99039224678074e+28, -53082343866368.0],
    [3.024371862411499, -2.617123977886884e-18],
    [-1.0246953485180651e-20, 1.4940922948774646e+28],
    [193.55908203125, 0.0007366340723820031],
    [6.020605984451432e-39, -51835305984.0],
    [6.020605984451432e-39, -1.3914433998714569e+19],
    [4.506564366124621e-08, -1.3914208598830875e+19],
    [811825472.0, 3089.559326171875],
    [3.6561146994501134e+24, -6.86016510525328e-13],
    [-1.4219949700196317e-37, 1.5232549467966728e-28],
    [9.100712563334986e-36, 3.9164226226256254e+33],
    [-0.00018458323029335588, -8.696166656696648e+17],
    [-1.1536378224263899e-05, 193.09303283691406],
    [-1.563460684389825e-25, -4.287516115796322e-14],
    [-0.756038248538971, 9.520183926405685e-30],
    [-4.0024069716738453e-23, -5.435061640259174e+16],
    [-3.999902811616312e-23, -5.435061640259174e+16],
    [-3.9998444359093254e-23, 2.4477341577806895e+32],
    [-3.999786060202339e-23, 9.520179412507378e-30],
    [-3.9997276844953527e-23, -4.2875076454668495e-14],
    [-2.2298901533418114e+20, 193.09222412109375],
    [5.820199924464949e-34, -8.696111681115259e+17],
    [50700364.0, 3.916389198244565e+33],
    [-850598811402240.0, 1.523239178245253e-28],
    [-1.7589725509470355e-10, -6.860088126899033e-13],
    [9.132982990893599e+23, -1.391398319894718e+19],
    [50697620.0, 3089.54052734375],
    [1.1256996224062732e-08, -6.860192752408678e-13],
    [2.4995247108545012e-24, 1.5232764931379256e-28],
    [-3.9054599057963284e-26, 3.916517015553621e+33],
    [-2.229595660147428e+20, -8.69645252971987e+17],
    [-3.567307738764634e+21, 193.10069274902344],
    [2.273190225201092e-36, -4.2877075452424016e-14],
    [-5.443137896762573e+16, 9.52063682086917e-30],
    [6.003888493772037e-39, -5.435325780747878e+16],
    [6.003629253556136e-39, 2.4478531160813395e+32],
    [6.003370013340236e-39, 9.520642087083862e-30],
    [6.003110773124336e-39, -4.287716015571874e-14],
    [-0.0001844074868131429, 193.10150146484375],
    [-6.101442841798469e-28, -8.696508192496026e+17],
    [811009216.0, 3.9165504399346817e+33],
    [-12.084806442260742, 1.5232921413187237e-28],
    [-2.3375088745580645e+26, -6.860269188661838e-13],
    [4.50181687483564e-08, -1.3914208598830875e+19],
    [-53147556904960.0, 6.266364832707814e+34],
    [-9.803900958184174e+32, 2.4372148482224762e-27],
    [9.130509253690277e+23, -4.3904671565009323e-11],
    [4.293105177995485e-14, 197727.703125],
    [-51899990016.0, -8.904799361901097e+20],
    [-3167696.0, 4.010335002104926e+36],
    [9.761132959239496e-27, 1.5597614197824042e-25],
    [-1.098996588178025e-11, -7.024483772433143e-10],
    [6.000158237260004e-39, -1.4247227493179112e+22],
    [6.000158237260004e-39, 5.9771993632205]],
               np.float64)


    

# pts =  np.array([value], np.int32)

pts = pts.reshape((-1, 1, 2))

isClosed = True

# Blue color in BGR
color = (255, 0, 0)
color1 = (0,0,255)
# Line thickness of 2 px
thickness = 2


# Using cv2.polylines() method
# Draw a Blue polygon with 
# thickness of 1 px
image = cv2.polylines(image, [pts], 
                      isClosed, color, thickness)
image = cv2.polylines(image, [pts1], 
                      isClosed, color1, thickness)
# Displaying the image
while(1):

    cv2.imshow('image', image)
    if cv2.waitKey(20) & 0xFF == 27:
        break

cv2.destroyAllWindows()